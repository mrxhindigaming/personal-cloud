import React, { useState } from "react";
import { auth, googleProvider } from './firebase'; // Ensure firebase is properly configured
import { signInWithPopup, signInWithEmailAndPassword } from "firebase/auth";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { FaEye, FaEyeSlash, FaGoogle, FaEnvelope, FaLock, FaCloud } from 'react-icons/fa';

const Login = ({ onLogin }) => {
Â  const [email, setEmail] = useState("");
Â  const [pass, setPass] = useState("");
Â  const [showPass, setShowPass] = useState(false);
Â  const [darkMode, setDarkMode] = useState(true);

Â  const handleLogin = async (e) => {
Â  Â  e.preventDefault();
Â  Â  try {
Â  Â  Â  const userCredential = await signInWithEmailAndPassword(auth, email, pass);
Â  Â  Â  toast.success('Login Successful!');
Â  Â  Â  onLogin(userCredential.user.uid); // Send the user's UID upon successful login
Â  Â  } catch (error) {
Â  Â  Â  toast.error('Invalid credentials. Please check your email and password.');
Â  Â  Â  console.error("Login Error:", error); // Log the error for debugging
Â  Â  }
Â  };

Â  const handleGoogleLogin = async () => {
Â  Â  try {
Â  Â  Â  const result = await signInWithPopup(auth, googleProvider);
Â  Â  Â  toast.success(`Welcome, ${result.user.displayName}`);
Â  Â  Â  onLogin(result.user.uid);
Â  Â  } catch (error) {
Â  Â  Â  toast.error('Google sign-in failed!');
Â  Â  Â  console.error("Google Sign-in Error:", error); // Log the error
Â  Â  }
Â  };

Â  const pageStyle = {
Â  Â  height: '100vh',
Â  Â  width: '100vw',
Â  Â  display: 'flex',
Â  Â  justifyContent: 'center',
Â  Â  alignItems: 'center',
Â  Â  fontFamily: 'Poppins, sans-serif',
Â  Â  background: darkMode
Â  Â  Â  ? 'radial-gradient(circle, #141e30, #243b55)'
Â  Â  Â  : 'linear-gradient(to right, #e0eafc, #cfdef3)',
Â  Â  transition: 'all 0.5s ease-in-out',
Â  Â  position: 'relative',
Â  };

Â  const formStyle = {
Â  Â  background: darkMode ? '#1f2937' : '#ffffff',
Â  Â  color: darkMode ? '#ffffff' : '#222',
Â  Â  padding: '50px 40px',
Â  Â  borderRadius: '20px',
Â  Â  boxShadow: '0 10px 40px rgba(0,0,0,0.2)',
Â  Â  width: '90%',
Â  Â  maxWidth: '420px',
Â  Â  transition: 'all 0.3s ease-in-out',
Â  Â  position: 'relative',
Â  };

Â  const inputWrapperStyle = {
Â  Â  position: 'relative',
Â  Â  marginBottom: '15px',
Â  };

Â  const inputIconStyle = {
Â  Â  position: 'absolute',
Â  Â  top: '50%',
Â  Â  left: '12px',
Â  Â  transform: 'translateY(-50%)',
Â  Â  color: darkMode ? '#ccc' : '#555',
Â  };

Â  const inputStyle = {
Â  Â  width: '100%',
Â  Â  padding: '12px 12px 12px 40px',
Â  Â  background: darkMode ? '#374151' : '#f3f3f3',
Â  Â  color: darkMode ? '#fff' : '#000',
Â  Â  border: '1px solid #ccc',
Â  Â  borderRadius: '8px',
Â  Â  outline: 'none',
Â  Â  fontSize: '15px',
Â  Â  transition: '0.3s ease',
Â  Â  boxSizing: 'border-box',
Â  };

Â  const inputFocusStyle = {
Â  Â  border: '1px solid #00e6e6',
Â  Â  boxShadow: '0 0 6px #00e6e6',
Â  };

Â  const buttonStyle = {
Â  Â  background: 'linear-gradient(to right, #00c6ff, #0072ff)',
Â  Â  color: '#fff',
Â  Â  padding: '12px',
Â  Â  width: '100%',
Â  Â  fontSize: '16px',
Â  Â  border: 'none',
Â  Â  borderRadius: '10px',
Â  Â  cursor: 'pointer',
Â  Â  fontWeight: 'bold',
Â  Â  marginTop: '15px',
Â  Â  transition: 'transform 0.2s ease, box-shadow 0.2s',
Â  Â  boxShadow: '0 4px 12px rgba(0, 198, 255, 0.3)',
Â  };

Â  const buttonHover = {
Â  Â  transform: 'scale(1.03)',
Â  Â  boxShadow: '0 6px 18px rgba(0, 198, 255, 0.4)',
Â  };

Â  const toggleStyle = {
Â  Â  position: 'absolute',
Â  Â  top: '20px',
Â  Â  right: '20px',
Â  Â  border: 'none',
Â  Â  background: darkMode ? '#4fd1c5' : '#333',
Â  Â  color: darkMode ? '#000' : '#fff',
Â  Â  padding: '6px 12px',
Â  Â  fontSize: '12px',
Â  Â  borderRadius: '20px',
Â  Â  cursor: 'pointer',
Â  };

Â  const headingStyle = {
Â  Â  fontSize: '28px',
Â  Â  fontWeight: '600',
Â  Â  marginBottom: '25px',
Â  Â  textAlign: 'center',
Â  Â  color: darkMode ? '#00e6e6' : '#333',
Â  Â  display: 'flex',
Â  Â  alignItems: 'center',
Â  Â  justifyContent: 'center',
Â  Â  gap: '10px',
Â  };

Â  return (
Â  Â  <div style={pageStyle}>
Â  Â  Â  <ToastContainer />
Â  Â  Â  <button onClick={() => setDarkMode(!darkMode)} style={toggleStyle}>
Â  Â  Â  Â  {darkMode ? 'â˜€ Light Mode' : 'ðŸŒ™ Dark Mode'}
Â  Â  Â  </button>

Â  Â  Â  <form onSubmit={handleLogin} style={formStyle}>
Â  Â  Â  Â  <h2 style={headingStyle}><FaCloud /> Welcome to MyCloud</h2>

Â  Â  Â  Â  <div style={inputWrapperStyle}>
Â  Â  Â  Â  Â  <FaEnvelope style={inputIconStyle} />
Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  type="email"
Â  Â  Â  Â  Â  Â  placeholder="Enter your email"
Â  Â  Â  Â  Â  Â  value={email}
Â  Â  Â  Â  Â  Â  onChange={(e) => setEmail(e.target.value)}
Â  Â  Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  Â  Â  ...inputStyle,
Â  Â  Â  Â  Â  Â  Â  ...(email ? inputFocusStyle : {}),
Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  </div>

Â  Â  Â  Â  <div style={inputWrapperStyle}>
Â  Â  Â  Â  Â  <FaLock style={inputIconStyle} />
Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  type={showPass ? 'text' : 'password'}
Â  Â  Â  Â  Â  Â  placeholder="Enter your password"
Â  Â  Â  Â  Â  Â  value={pass}
Â  Â  Â  Â  Â  Â  onChange={(e) => setPass(e.target.value)}
Â  Â  Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  Â  Â  ...inputStyle,
Â  Â  Â  Â  Â  Â  Â  paddingRight: '40px',
Â  Â  Â  Â  Â  Â  Â  ...(pass ? inputFocusStyle : {}),
Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  <span
Â  Â  Â  Â  Â  Â  onClick={() => setShowPass(!showPass)}
Â  Â  Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  Â  Â  position: 'absolute',
Â  Â  Â  Â  Â  Â  Â  right: '10px',
Â  Â  Â  Â  Â  Â  Â  top: '50%',
Â  Â  Â  Â  Â  Â  Â  transform: 'translateY(-50%)',
Â  Â  Â  Â  Â  Â  Â  cursor: 'pointer',
Â  Â  Â  Â  Â  Â  Â  color: darkMode ? '#ccc' : '#555',
Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  {showPass ? <FaEyeSlash /> : <FaEye />}
Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  </div>

Â  Â  Â  Â  <button type="submit" style={buttonStyle}>
Â  Â  Â  Â  Â  Login
Â  Â  Â  Â  </button>

Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  type="button"
Â  Â  Â  Â  Â  onClick={handleGoogleLogin}
Â  Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  Â  ...buttonStyle,
Â  Â  Â  Â  Â  Â  background: '#de5246',
Â  Â  Â  Â  Â  Â  marginTop: '10px',
Â  Â  Â  Â  Â  Â  boxShadow: '0 4px 12px rgba(222, 82, 70, 0.4)',
Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  <FaGoogle style={{ marginRight: '8px' }} />
Â  Â  Â  Â  </button>
Â  Â  Â  </form>
Â  Â  </div>
Â  );
}

export default Login;